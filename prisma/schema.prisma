generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  deliveryman
}

enum UserStatus {
  active
  inactive
}

enum OrderStatus {
  pending
  picked_up
  delivered
  returned
}

model User {
  id        String     @id @default(uuid())
  cpf       String     @unique
  password  String
  role      UserRole   @default(deliveryman)
  name      String
  email     String?
  phone     String?
  status    UserStatus @default(active)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime?  @updatedAt @map("updated_at")

  orders        Order[]        @relation("DeliverymanOrders")
  notifications Notification[] @relation("RecipientNotifications")
  recipients    Recipient[]    @relation("RecipientUser")

  @@map("users")
}

model Recipient {
  id           String    @id @default(uuid())
  userId       String?   @map("user_id")
  name         String
  street       String
  number       Int
  neighborhood String
  city         String
  state        String
  zipCode      Int       @map("zip_code")
  phone        String
  email        String
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  user   User?   @relation("RecipientUser", fields: [userId], references: [id])
  orders Order[] @relation("RecipientOrders")

  @@map("recipients")
}

model Order {
  id            String      @id @default(uuid())
  recipientId   String      @map("recipient_id")
  deliverymanId String?     @map("deliveryman_id")
  status        OrderStatus @default(pending)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime?   @updatedAt @map("updated_at")

  recipient   Recipient         @relation("RecipientOrders", fields: [recipientId], references: [id])
  deliveryman User?             @relation("DeliverymanOrders", fields: [deliverymanId], references: [id])
  attachments OrderAttachment[] @relation("OrderAttachments")

  @@map("orders")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  readAt      DateTime? @map("read_at")

  recipient User @relation("RecipientNotifications", fields: [recipientId], references: [id])

  @@map("notifications")
}

model OrderAttachment {
  id           String @id @default(uuid())
  orderId      String @map("order_id")
  attachmentId String @map("attachment_id")

  order Order @relation("OrderAttachments", fields: [orderId], references: [id])

  @@map("order_attachments")
}
